<?xml version="1.0" encoding="UTF-8" ?>

<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
    version="2.0">
    
  <display-name>Spring Insight taglib</display-name>
  <tlib-version>1.0</tlib-version>
  <short-name>insight</short-name>
  <uri>http://static.springsource.com/tags/insight</uri>
  
  <tag>
    <description>
      Renders a component view inline.  Spring Views and then Tiles components are searched.
      The JSP body is evaluated if no other view is rendered.
    </description>
    <name>render</name>
    <tag-class>com.springsource.insight.dashboard.util.ViewRenderTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <name>view</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  
  <tag>
    <description>
      Requires admin authority to render tag body.  Will also render for dev edition.
    </description>
    <name>admin</name>
    <tag-class>com.springsource.insight.dashboard.util.RequireAdminTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <name>development</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  
  <tag>
    <description>
	    Renders all plugin resources, specified within the DashboardPluginRepo
    </description>
    <name>renderPluginResources</name>
    <tag-class>com.springsource.insight.dashboard.util.RenderPluginResourcesTag</tag-class>
    <body-content>JSP</body-content>
	<attribute>
      <name>area</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
  </tag>

  <function>
    <description>
      Format time value with appropriate label (ms, s, m, h) and precision (1 decimal).
    </description>
    <name>fmtMillis</name>
    <function-class>com.springsource.insight.dashboard.util.FmtMillis</function-class>
    <function-signature>java.lang.String fmtMillis(java.lang.Double, java.util.Locale)</function-signature>
    <example>
      ${insight:fmtMillis(duration, pageContext.request.locale)}
    </example>
  </function>
  
  <function>
    <description>
      Format millisecond duration range
    </description>
    <name>durationRange</name>
    <function-class>com.springsource.insight.dashboard.util.FmtMillis</function-class>
    <function-signature>java.lang.String durationRange(java.lang.Double, java.lang.Double, java.util.Locale)</function-signature>
    <example>
      ${insight:durationRange(start, end, pageContext.request.locale)}
    </example>
  </function>
  
  <function>
    <description>
      Format underscore text strings in a human friendly way.  "WEB_REQUEST" as "Web Request" 
    </description>
    <name>fmtUnderscoreLabel</name>
    <function-class>com.springsource.insight.dashboard.util.FmtLabel</function-class>
    <function-signature>java.lang.String fmtUnderscoreLabel(java.lang.String)</function-signature>
    <example>
      ${insight:fmtUnderscoreLabel(operation.type.name)}
    </example>
  </function>
  
  <function>
    <description>
      Format a Java bean name in a human friendly way.  "webRequest" as "Web Request" 
    </description>
    <name>fmtBeanPropertyName</name>
    <function-class>com.springsource.insight.dashboard.util.FmtLabel</function-class>
    <function-signature>java.lang.String fmtBeanPropertyName(java.lang.String)</function-signature>
    <example>
      ${insight:fmtBeanPropertyName(operation.type.name)}
    </example>
  </function>
  
  <function>
    <description>
      Format an arbitrary object in a human friendly way.
    </description>
    <name>fmtBeanPropertyValue</name>
    <function-class>com.springsource.insight.dashboard.util.FmtLabel</function-class>
    <function-signature>java.lang.String fmtBeanPropertyValue(java.lang.Object)</function-signature>
    <example>
      ${insight:fmtBeanPropertyValue(operation.model)}
    </example>
  </function>
  
  <function>
    <description>
      Set of bean properties for an Operation.  Well know properties such as 'label' and 'sourceCodeLocation' are removed. 
    </description>
    <name>operationProperties</name>
    <function-class>com.springsource.insight.dashboard.util.BeanUtils</function-class>
    <function-signature>java.util.Set operationProperties(java.util.Map)</function-signature>
    <example>
      ${insight:operationProperties(operation)}
    </example>
  </function>
  
  <function>
    <description>
      JS escape the value
    </description>
    <name>escapeJs</name>
    <function-class>org.springframework.web.util.JavaScriptUtils</function-class>
    <function-signature>java.lang.String javaScriptEscape(java.lang.String)</function-signature>
    <example>
      ${insight:escapeJs(resource.key)}
    </example>
  </function>
  
</taglib>
